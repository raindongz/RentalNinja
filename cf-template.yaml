AWSTemplateFormatVersion: '2010-09-09'
Resources:
  # DynamoDB Table
  PostTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: posts_test
      AttributeDefinitions:
        - AttributeName: post_id_test
          AttributeType: S
      KeySchema:
        - AttributeName: post_id_test
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST

  # Cognito User Pool
  CognitoUserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      UserPoolName: rentalninja-test

  # Cognito User Pool Client
  CognitoUserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      ClientName: rentalninja-test
      UserPoolId: !Ref CognitoUserPool

  # Lambda Function for Get Post Detail API (Using ECR)
  GetPostDetailLambda:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: get-post-detail
      PackageType: Image
      Code:
        ImageUri: <ECR Image URI for GetPostDetail>
      Role: !GetAtt LambdaExecutionRole-test.Arn
      MemorySize: 128
      Timeout: 15


  # Lambda Execution Role
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: LambdaExecutionRole-test
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: LambdaExecutionPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:*
                  - logs:*
                  - s3:*
                Resource: "*"

  # API Gateway
  ApiGatewayRestApi:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: postAppApi
    DependsOn: GetPostDetailLambda

  # Cognito Authorizer in API Gateway
  CognitoAuthorizer:
    Type: AWS::ApiGateway::Authorizer
    Properties:
      Name: CognitoAuthorizer
      RestApiId: !Ref ApiGatewayRestApi
      Type: COGNITO_USER_POOLS
      IdentitySource: method.request.header.Authorization
      ProviderARNs:
        - !GetAtt CognitoUserPool.Arn

  # API Gateway Resource for Get Post Detail API
  GetPostDetailResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId: !GetAtt ApiGatewayRestApi.RootResourceId
      PathPart: get-post-detail
      RestApiId: !Ref ApiGatewayRestApi



  # API Gateway Method for Get Post Detail API
  GetPostDetailMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: COGNITO_USER_POOLS
      AuthorizerId: !Ref CognitoAuthorizer
      ResourceId: !Ref GetPostDetailResource
      RestApiId: !Ref ApiGatewayRestApi
      HttpMethod: POST
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetPostDetailLambda.Arn}/invocations


  # Lambda Permissions for API Gateway to Invoke Lambda
  GetPostDetailLambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref GetPostDetailLambda
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ApiGatewayRestApi}/*/POST/get-post-detail

